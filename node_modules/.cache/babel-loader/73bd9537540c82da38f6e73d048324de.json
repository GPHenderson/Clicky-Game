{"ast":null,"code":"import _objectSpread from \"/Users/gregoryhenderson/Documents/Clicky-Game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/gregoryhenderson/Documents/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gregoryhenderson/Documents/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gregoryhenderson/Documents/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gregoryhenderson/Documents/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gregoryhenderson/Documents/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gregoryhenderson/Documents/Clicky-Game/src/components/Game/index.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport data from \"../../data.json\";\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: data,\n      score: 0,\n      topScore: 0,\n      showAlert: 0,\n      showSuccess: 0,\n      ClickItem: []\n    };\n\n    _this.handleCorrectGuess = function (newData) {\n      _this.setState({\n        score: _this.state.score + 1\n      });\n    };\n\n    _this.handleIncorrectGuess = function (data) {\n      _this.shuffleData(data);\n    };\n\n    _this.shuffleData = function (data) {\n      var i = data.length - 1;\n\n      while (i > 0) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    _this.handleItemClick = function (id) {\n      var guessedCorrectly = false;\n      var score = _this.state.score;\n      var topScore = _this.state.topScore;\n\n      _this.setState({\n        showAlert: 0\n      });\n\n      var newData = _this.state.data.map(function (item) {\n        var newItem = _objectSpread({}, item);\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return newItem;\n      });\n\n      guessedCorrectly ? _this.handleCorrectGuess(newData) : _this.handleIncorrectGuess(newData);\n\n      if (score > topScore) {\n        _this.setState({\n          topScore: score\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.shuffleData(this.state.data)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.data.map(function (item) {\n        return React.createElement(ClickItem, {\n          id: item.id,\n          image: item.image,\n          handleClick: _this2.han,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/gregoryhenderson/Documents/Clicky-Game/src/components/Game/index.js"],"names":["React","Component","Nav","Header","Container","ClickItem","Footer","data","Game","state","score","topScore","showAlert","showSuccess","handleCorrectGuess","newData","setState","handleIncorrectGuess","shuffleData","i","length","j","Math","floor","random","temp","handleItemClick","id","guessedCorrectly","map","item","newItem","clicked","image","han"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;IAEMC,I;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJF,MAAAA,IAAI,EAAJA,IADI;AAEJG,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,QAAQ,EAAE,CAHN;AAIJC,MAAAA,SAAS,EAAE,CAJP;AAKJC,MAAAA,WAAW,EAAE,CALT;AAMJR,MAAAA,SAAS,EAAE;AANP,K;;UAcNS,kB,GAAqB,UAAAC,OAAO,EAAI;AAC9B,YAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAd;AACC,K;;UAEHO,oB,GAAuB,UAAAV,IAAI,EAAI;AAC9B,YAAKW,WAAL,CAAiBX,IAAjB;AACF,K;;UAECW,W,GAAc,UAAAX,IAAI,EAAI;AACpB,UAAIY,CAAC,GAAGZ,IAAI,CAACa,MAAL,GAAc,CAAtB;;AACA,aAAOD,CAAC,GAAG,CAAX,EAAc;AACZ,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,YAAMM,IAAI,GAAGlB,IAAI,CAACY,CAAD,CAAjB;AACAZ,QAAAA,IAAI,CAACY,CAAD,CAAJ,GAAUZ,IAAI,CAACc,CAAD,CAAd;AACAd,QAAAA,IAAI,CAACc,CAAD,CAAJ,GAAUI,IAAV;AACAN,QAAAA,CAAC;AACF;;AACD,aAAOZ,IAAP;AACD,K;;UAEDmB,e,GAAkB,UAAAC,EAAE,EAAI;AACtB,UAAIC,gBAAgB,GAAG,KAAvB;AACA,UAAIlB,KAAK,GAAG,MAAKD,KAAL,CAAWC,KAAvB;AACA,UAAIC,QAAQ,GAAG,MAAKF,KAAL,CAAWE,QAA1B;;AACA,YAAKK,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAC;AAAX,OAAd;;AAEA,UAAMG,OAAO,GAAG,MAAKN,KAAL,CAAWF,IAAX,CAAgBsB,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AAC1C,YAAMC,OAAO,qBAAQD,IAAR,CAAb;;AACA,YAAIC,OAAO,CAACJ,EAAR,KAAeA,EAAnB,EAAuB;AACrB,cAAI,CAACI,OAAO,CAACC,OAAb,EAAsB;AACpBD,YAAAA,OAAO,CAACC,OAAR,GAAkB,IAAlB;AACAJ,YAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;;AACD,eAAOG,OAAP;AACD,OATe,CAAhB;;AAUAH,MAAAA,gBAAgB,GACZ,MAAKd,kBAAL,CAAwBC,OAAxB,CADY,GAEZ,MAAKE,oBAAL,CAA0BF,OAA1B,CAFJ;;AAIA,UAAGL,KAAK,GAAGC,QAAX,EAAoB;AAClB,cAAKK,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAGD;AAAZ,SAAd;AACD;AAEF,K;;;;;;;wCAhDe;AAClB,WAAKM,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAE,KAAKW,WAAL,CAAiB,KAAKT,KAAL,CAAWF,IAA5B;AAAR,OAAd;AACD;;;6BAgDS;AAAA;;AACJ,aACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,KAAL,CAAWF,IAAX,CAAgBsB,GAAhB,CAAoB,UAAAC,IAAI;AAAA,eACrB,oBAAC,SAAD;AACI,UAAA,EAAE,EAAEA,IAAI,CAACH,EADb;AAEI,UAAA,KAAK,EAAEG,IAAI,CAACG,KAFhB;AAGI,UAAA,WAAW,EAAE,MAAI,CAACC,GAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADqB;AAAA,OAAxB,CADL,CAHJ,CADA;AAeH;;;;EA7EcjC,S;;AAgFnB,eAAeO,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport data from \"../../data.json\";\n\nclass Game extends Component{\n    state = {\n        data,\n        score: 0,\n        topScore: 0,\n        showAlert: 0,\n        showSuccess: 0,\n        ClickItem: []\n      };\n\n\n  componentDidMount() {\n    this.setState({ data: this.shuffleData(this.state.data) });\n  }\n\n      handleCorrectGuess = newData => {\n        this.setState({score: this.state.score + 1});\n        };\n\n      handleIncorrectGuess = data => {\n       this.shuffleData(data) ;  \n    };\n\n      shuffleData = data => {\n        let i = data.length - 1;\n        while (i > 0) {\n          const j = Math.floor(Math.random() * (i + 1));\n          const temp = data[i];\n          data[i] = data[j];\n          data[j] = temp;\n          i--;\n        }\n        return data;\n      };\n\n      handleItemClick = id => {\n        let guessedCorrectly = false;\n        let score = this.state.score;\n        let topScore = this.state.topScore;\n        this.setState({showAlert:0});\n    \n        const newData = this.state.data.map(item => {\n          const newItem = { ...item };\n          if (newItem.id === id) {\n            if (!newItem.clicked) {\n              newItem.clicked = true;\n              guessedCorrectly = true;\n            }\n          }\n          return newItem;\n        });\n        guessedCorrectly\n          ? this.handleCorrectGuess(newData)\n          : this.handleIncorrectGuess(newData);\n    \n        if(score > topScore){\n          this.setState({topScore : score});\n        }\n    \n      };\n\n    render(){\n        return(\n        <Container>\n            <Nav>\n            </Nav>\n            <div className=\"row\">\n                {this.state.data.map(item => (\n                    <ClickItem\n                        id={item.id}\n                        image={item.image}\n                        handleClick={this.han}\n                    />\n                    ))}\n            </div>\n        </Container>\n        );\n    }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}